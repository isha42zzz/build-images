//! `SeaORM` Entity. Generated by sea-orm-codegen 0.12.15

use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "data_meta")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub resource_uri: String,
    pub owner_party_id: String,
    pub parents: Option<String>,
    #[sea_orm(column_type = "Text")]
    pub signature: String,
    pub gmt_create: DateTime,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::rules::Entity")]
    Rules,
}

impl Related<super::rules::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::Rules.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
